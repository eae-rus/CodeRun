import os

def main():
    '''
    Формула (mi + 1) / (ki + 2) используется для вычисления вероятности выпадения орла на монетке i 
    на основании количества бросков ki и количества выпавших орлов mi.

    Для расчёта вероятности выпадения орла на монетке i можно использовать бета-распределение.
    Если предположить, что выпадение орла - это успех, а выпадение решки - неудача,
    то количество выпадений орла mi можно интерпретировать как количество успехов в ki независимых испытаниях
    с вероятностью успеха pi. Тогда можно использовать бета-распределение в качестве
    априорного распределения для вероятности успеха pi и получить следующую формулу для её оценки:

    pi = (mi + 1) / (ki + 2)

    Здесь мы добавляем единицу к количеству выпавших орлов и двойку к общему количеству бросков,
    чтобы избежать ситуации, когда вероятность успеха равна нулю или единице.
    Это позволяет избежать смещения оценки вероятности в сторону крайних значений.
    '''
    # Чтение входных данных
    file_path = os.path.abspath("") + '\\2023\\ml\\Средние\\\Монетки\\coins.in'
    with open(file_path) as f:
        n = int(f.readline())
        coins = []
        for i in range(n):
            ki, mi = map(int, f.readline().split())
            pi = (mi + 1) / (ki + 2)
            coins.append((pi, i))

    # Сортировка вероятностей и их индексов
    coins.sort()

    # Вывод индексов монеток в отсортированном порядке
    file_path = os.path.abspath("") + '\\2023\\ml\\Средние\\\Монетки\\out.txt'
    with open(file_path, "w") as f:
        for pi, i in coins:
            f.write(str(i) + "\n")



if __name__ == '__main__':
	main()